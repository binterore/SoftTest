一、软件测试基础知识：
软件测试的定义：使用人工或自动的手段来运行或测定某个系统的过程，其目的在于检验它是否满足规定的需求或是弄清预期结果与实际结果之间的差别。
软件测试方法分类
按阶段划分：单元测试，集成测试，系统测试，验收测试
按是否查看代码：黑盒测试，白盒测试，灰盒测试。
按是否手工执行：手工测试，自动化测试。
按是否运行划分：静态测试，动态测试。
按测试地域划分：国际化测试，本地化测试
按照实施的组织：α测试，β测试，第三方测试
按测试对象划分：
功能测试
非功能测试：性能测试。安全测试，兼容性测试，文档测试，易用性测试，界面测试，安装卸载测试

软件测试原则：
1、所有测试的标准都是建bai立在用户需求之上的，测试的目的在于发现系统是否满足规定的需求。
2、尽早的和不断的测试，越早进行测试，缺陷的修复成本就会越低。
3、程序员应避免检查自己的程序，由第三方进行测试更客观有效。
4、穷举测试是不可能的。
5、充分注意测试中的群集现象，一段程序中一发现的错误数越多，其中存在的错误概率越大，因此对发现错误较多的程序段，应进行更深入的测试。
6、设计测试用例时应包括合理输入和不合理输入，以及各种边界条件、特殊情况下要制造极端状态和意外状态。
7、注意回归测试的关联系，往往修改一个错误会引起更多错误。
8、测试应从“小规模”开始，逐步转向“大规模”。
9、测试用例式设计出来，不是写出来的，应根据测试的目的，采用相应的方法设计测试用例，从而提高测试的效率，更多的发现错误，提高程序的可靠性。
10、重视并妥善保存一切测试过程文档（测试计划，测试用例，测试报告等）。
软件测试测略：如何进行软件测试的计划
软件测试模型：
1、传统瀑布模型
瀑布模型是将软件生存周期的各项活动规定为按固定顺序而连接的若干阶段工作，形如瀑布流水，终得到软件产品。其核心思想是按工序将问题化简，将功能的实现与设计分开，便于分工协作，即采用结构化的分析与设计方法将逻辑实现与物理实现分开。将软件生命周期划分为制定计划、需求分析、软件设计、程序编写、软件测试和运行维护等六个基本活动，并且规定了它们自上而下、相互衔接的固定次序，如同瀑布流水，逐级下落。
2、V模型
V模型是瀑布模型的一个演进，或者是叫优化。V模型是一个著名的、以测试为驱动的开发模型。在V模型中明确了明确测试分层的概念，如图中给出的单元测试、集成测试、系统测试、验收测试等，分层中的测试类别的测试主体、测试依据、测试对象和测试目标有所不同。比如单元测试的测试主体主要是开发、测试依据主要是系统详细设计说明书、测试对象主要是代码中的函数、类等内容，确保其符合测试详细设计，确保代码中的函数、类是可靠、稳固的。
3、W模型
在W模型中，测试与开发同时进行，增加了在开发阶段输出交付件的同步测试。与V模型对比，W模型明确体现"尽早地和不断地进行软件测试"的原则。测试提前介入，尽早发现问题。但不足的是W模型仍然不支持迭代，仍需按照流水线进行设计、编码和测试。
4、H模型
H模型只体现了测试过程，未体现开发过程，它表明测试是一个独立的过程
H模型有一个测试就绪点，即达到准入条件（测试方案、测试策略、测试用例、测试环境、输入输出项等是否明确）才能继续执行
H模型的测试范围不仅仅是需求、文档和程序，它涉及整个产品包
H模型体现了尽早测试和不断测试原则
